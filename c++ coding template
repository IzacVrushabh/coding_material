/*
 ___
/   \
\___/
 ___   ________   ____ __    ________
|   | |____    | /    '  \  /  _____ |      
|   |     /   / |   __   | |  |     \|
|   |    /   /  |  |  |  | |  |
|   |   /   /   |  |__|  | |  | 
|   |_ /   /___ |         \|  |_____/| 
|____/|________| \_____/\_/ \________|  ............


*/

//mehnat karo saalo.....

// #pragma GCC optimize "trapv"
#include <bits/stdc++.h>
//#include <boost/multiprecision/cpp_int.hpp> 
using namespace std;
//using namespace boost::multiprecision; 
#define bitcount(x) __builtin_popcount(x)
#define bits_to_int to_ullong() // or ulong()
#define ll long long int
#define INF 1000000000
#define mod 1000000007
#define PI 3.1415926535897932384626
#define endl "\n"
#define pb push_back
#define em emplace_back
#define mpr make_pair //or simply use { a , b }
#define mk make_tuple // acc. to que...
#define all(v) v.begin(),v.end()
#define sortall(v) sort(all(v))   //increasing order sorting
#define all_rev(v)  v.begin(),v.end(), greater<ll>() 
#define sortallrev(v) sort(all_rev(v)) // reverse order sorting
#define mems(x, y) memset(x, y, sizeof(x)) // clear a list..
#define ff first
#define ss second
#define mxe(v) *max_element(v.begin(),v.end())
#define mne(v) *min_element(v.begin(),v.end())
#define bs binary_search
#define lb lower_bound
#define ub upper_bound
#define mpll map<ll,ll>
#define umpll unordered_map<ll,ll> 
#define Rev(i,n) for(int i=n-1;i>=0;i--)
#define Rep0(i,a,n) for(int i=a; i<n; ++i)
#define Rep1(i,a,n) for(int i=a; i<=n; ++i)
#define bts bitset<64>  //bitwise operator...
#define index_of at     //index of any element..
#define deb(x) cout<< #x << "=" << x <<"\n"
#define deb2(x,y) cout<< #x << "=" << x << "," << #y << "=" << y <<"\n"

const int mxN=5e4;

typedef pair<int, int>  pii;
typedef pair<ll, ll>    pll;
typedef vector<int>	    vi;
typedef vector<ll>      vl;
typedef vector<pii>		vpii;
typedef vector<pll>		vpll;
typedef vector<vi>		vvi;
typedef vector<vl>		vvl;

ll parity(ll x) {
  //1 if odd
  ll y;
  y = x ^ (x >> 1);
  y = y ^ (y >> 2);
  y = y ^ (y >> 4);
  y = y ^ (y >> 8);
  y = y ^ (y >>16);
  return y & 1;
}

bool isprime(ll n)
{
    if (n <= 1)  return false;
    if (n <= 3)  return true;
    if (n%2 == 0 || n%3 == 0) return false;

    for (ll i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;

    return true;
}

ll gcd(ll a,ll b){ 
    if (b == 0) 
        return a; 
    return gcd(b, a % b);  
      
} 


ll fac(ll n) { 
   if ((n==0)||(n==1))
      return 1; 
   else
      return n*fac(n-1);
}


ll combination(ll n,ll k){
    ll res = 1;
    if(k>n-k)
        k=n-k;
    for(int i=0;i<k;++i)
    {
        res=((res*(n-i))/(i+1));
        
        
    }
    return res;
}


ll power(ll a, ll b, ll mod){
	ll x = 1, y = a;
	while (b > 0){
		if (b%2){
			x = (x*y)%mod;
		}
		y = (y*y)%mod;
		b /= 2;
	}
	return x%mod;
}	


ll modInverse(ll n, ll mod){
	return power(n, mod-2, mod);
}


ll combination(ll n, ll r, ll p){ 
      if (r==0) 
      return 1; 
    ll fac[n+1]; 
    fac[0] = 1; 
    for (ll i=1 ; i<=n; i++) 
        fac[i] = fac[i-1]*i%p; 
    return (fac[n]*modInverse(fac[r],p)%p*modInverse(fac[n-r],p)%p)%p; 
}


ll nCr(ll n,ll r)
{
	if(n==r) return 1;
	if(r==1) return n;
	return nCr(n-1,r) + nCr(n-1,r-1);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    #ifndef ONLINE_JUDGE 
    freopen("input.txt", "r", stdin); 
    freopen("error.txt", "w", stderr); 
    freopen("output.txt", "w", stdout); 
    #endif 
    
	ll t; 
	t=1;
	cin>> t;
	while(t--){
	    
	    
	}
	
	
}
